{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\fswiss\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\froman\fprq2\fcharset128 Symbol;}{\f6\fmodern\fprq0\fcharset0 Courier New;}{\f7\fnil\fprq2\fcharset2 Wingdings;}{\f8\fnil\fprq2\fcharset128 Noto Sans Mono CJK TC Regular;}{\f9\fnil\fprq1\fcharset128 Bitstream Vera Sans Mono;}{\f10\fnil\fprq1\fcharset128 DejaVu Sans Mono;}{\f11\fnil\fprq2\fcharset0 Noto Sans CJK SC Regular;}{\f12\fnil\fprq2\fcharset0 FreeSans;}{\f13\fswiss\fprq0\fcharset128 FreeSans;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033 Normal;}
{\s1\sbasedon0\snext0\ilvl0\outlinelevel0\ql\widctlpar\keepn\ltrpar\cf0\ul\ulc0\dbch\af0\dbch\af0\afs24\alang1025\loch\f0\fs36\lang1033 Heading 1;}
{\*\cs15\snext15 WW8Num1z0;}
{\*\cs16\snext16 WW8Num1z1;}
{\*\cs17\snext17 WW8Num1z2;}
{\*\cs18\snext18 WW8Num1z3;}
{\*\cs19\snext19 WW8Num1z4;}
{\*\cs20\snext20 WW8Num1z5;}
{\*\cs21\snext21 WW8Num1z6;}
{\*\cs22\snext22 WW8Num1z7;}
{\*\cs23\snext23 WW8Num1z8;}
{\*\cs24\snext24 WW8Num2z0;}
{\*\cs25\snext25 WW8Num2z1;}
{\*\cs26\snext26 WW8Num2z2;}
{\*\cs27\snext27 WW8Num2z3;}
{\*\cs28\snext28 WW8Num2z4;}
{\*\cs29\snext29 WW8Num2z5;}
{\*\cs30\snext30 WW8Num2z6;}
{\*\cs31\snext31 WW8Num2z7;}
{\*\cs32\snext32 WW8Num2z8;}
{\*\cs33\snext33 WW8Num3z0;}
{\*\cs34\snext34 WW8Num3z1;}
{\*\cs35\snext35 WW8Num3z2;}
{\*\cs36\snext36 WW8Num3z3;}
{\*\cs37\snext37 WW8Num3z4;}
{\*\cs38\snext38 WW8Num3z5;}
{\*\cs39\snext39 WW8Num3z6;}
{\*\cs40\snext40 WW8Num3z7;}
{\*\cs41\snext41 WW8Num3z8;}
{\*\cs42\snext42\dbch\af0\dbch\af0\loch\f5 WW8Num4z0;}
{\*\cs43\snext43\dbch\af6\loch\f6 WW8Num4z1;}
{\*\cs44\snext44\dbch\af7\loch\f7 WW8Num4z2;}
{\*\cs45\snext45\dbch\af5\loch\f5 WW8Num4z3;}
{\*\cs46\snext46 Default Paragraph Font;}
{\*\cs47\snext47 Numbering Symbols;}
{\s48\sbasedon0\snext49\ql\widctlpar\sb240\sa120\keepn\ltrpar\cf0\dbch\af11\dbch\af12\afs28\alang1025\loch\f4\fs28\lang1033 Heading;}
{\s49\sbasedon0\snext49\ql\sl288\slmult1\widctlpar\sb0\sa140\ltrpar\cf0\dbch\af0\dbch\af0\afs24\alang1025\loch\f0\fs24\lang1033 Text Body;}
{\s50\sbasedon49\snext50\ql\sl288\slmult1\widctlpar\sb0\sa140\ltrpar\cf0\dbch\af0\dbch\af13\afs24\alang1025\loch\f0\fs24\lang1033 List;}
{\s51\sbasedon0\snext51\ql\widctlpar\sb120\sa120\noline\ltrpar\cf0\i\dbch\af0\dbch\af13\afs24\alang1025\ai\loch\f0\fs24\lang1033 Caption;}
{\s52\sbasedon0\snext52\ql\widctlpar\noline\ltrpar\cf0\dbch\af0\dbch\af13\afs24\alang1025\loch\f0\fs24\lang1033 Index;}
{\s53\sbasedon0\snext53\ql\widctlpar\li0\ri0\lin0\rin0\fi0\ltrpar\cf0\dbch\af0\dbch\af0\afs24\alang1025\loch\f0\fs24\lang1033 Text Body Indent;}
{\s54\sbasedon0\snext54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033 HTML Preformatted;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}
{\listlevel\levelnfc255\leveljc0\levelstartat1\levelfollow2{\leveltext \'00;}{\levelnumbers;}\fi0\li0}\listid1}
{\list\listtemplateid2
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'02\'00.;}{\levelnumbers\'01;}\fi-360\li1275}\listid2}
{\list\listtemplateid3
{\listlevel\levelnfc23\leveljc0\levelstartat0\levelfollow0{\leveltext \'01\u61623 ?;}{\levelnumbers;}\f5\dbch\af0\fi-360\li720}\listid3}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}{\*\generator LibreOffice/5.2.2.2$Linux_X86_64 LibreOffice_project/20m0$Build-2}{\info{\title what is waste}{\author Dick Pumpaloaf}{\creatim\yr2003\mo1\dy5\hr0\min51}{\revtim\yr2016\mo11\dy24\hr23\min8}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops}\deftab720
\viewscale160
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\lndscpsxn\pgwsxn15840\pghsxn12240\marglsxn720\margrsxn720\margtsxn720\margbsxn720\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\landscape\paperh12240\paperw15840\margl720\margr720\margt720\margb720\sectd\sbknone\sectunlocked1\lndscpsxn\pgndec\pgwsxn15840\pghsxn12240\marglsxn720\margrsxn720\margtsxn720\margbsxn720\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s1\ilvl0\outlinelevel0\ql\widctlpar\keepn\ltrpar\cf0\ul\ulc0\dbch\af0\dbch\af0\afs24\alang1025\loch\f0\fs36\lang1033{\listtext\pard\plain \tab}\ls1 \li0\ri0\lin0\rin0\fi0{\b\afs88\ab\rtlch \ltrch\loch\fs88\loch\f10\hich\af10
WASTE}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10

\par \pard\plain \s53\ql\widctlpar\li0\ri0\lin0\rin0\fi0\ltrpar\cf0\dbch\af0\dbch\af0\afs24\alang1025\loch\f0\fs24\lang1033{\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10
WASTE is a tool }{\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10
for }{\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10
secure distributed collaboration and communications for trusted groups of }{\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10
individuals}{\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10
. WASTE allows }{\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10
easy and effortless communication }{\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10
and }{\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10
data }{\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10
transfer. WASTE requires }{\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10
minimal }{\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10
administration }{\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10
and involves }{\afs64\rtlch \ltrch\loch\fs64\loch\f10\hich\af10
no central server.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\pagebb\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
WASTE provides a generic virtual secure private network }{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
for various services.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Instant Messaging }{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
\u8211\'3f allows users to communicate with other users on a private WASTE network in much the same way as when using AIM/ICQ/etc. This feature is primarily accessed through the main WASTE window.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Group }{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
C}{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
hat }{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
\u8211\'3f allows two or more users to chat on a WASTE network in much the same way as when using AIM/ICQ/IRC/etc. This feature is primarily accessed through the main WASTE window.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
P}{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
resence }{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
\u8211\'3f allows users to see what other users are currently on a private WASTE network. This feature is primarily accessed through the main WASTE window, and facilitates ease in Instant Messaging.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Key }{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Sharing}{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
 }{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
\u8211\'3f allows hosts on the WASTE network to exchange public keys so that they can directly connect to each other (which helps the network optimize itself)}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\widctlpar\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\pagebb{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
File }{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Index }{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
\u8211\'3f allows users to browse a virtual directory structure for each user on the network. Each user can specify a list of directories to make available to other users on the network. This feature is primarily accessed through the WASTE Browser window. }
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
File }{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Search }{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
\u8211\'3f allows users to search other users\uc2 \u8217\'81\'66 databases. Each user can specify a list of directories to make available to other users on the network. Currently searching for filenames and directory names is all that is supported, but full-text searching and meta-searching would be easily added. This feature is primarily accessed through the WASTE Browser window. \uc1 }
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
File }{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
T}{\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
ransfer }{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
\u8211\'3f allows users to transfer files to or from other users. Files can be found via the file browsing and file searching features, or files can be uploaded to other users manually. This feature is accessed through many interfaces, and can be managed with the WASTE File Transfer window.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li720\ri0\lin720\rin0\fi0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\ul\ulc0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\pagebb{\ul\ulc0\b\afs32\ab\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Protocol}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\ul\ulc0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s53\ql\widctlpar\li0\ri0\lin0\rin0\fi0\ltrpar\cf0\dbch\af0\dbch\af0\afs24\alang1025\loch\f0\fs24\lang1033{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
WASTE routes all data through a distributed ad-hoc network. The network structure can adapt for traffic, and is fairly organized based on capacity. When moving large amounts of data, the network is redundant and load-balanced (though the load balancing is currently sub-optimal, it does work). Because all data transfer is accomplished through this distributed network, firewalls do not impair function as long as there are sufficient hosts on the network that are accessible from everywhere.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
WASTE keeps the private network private by only connecting or allowing connections between known users, and by using strong encryption to secure those links.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Once a WASTE network is up, users do not have to worry about IP addresses to connect to, firewalled machines, or other network topologies. As long as the user can connect to any other host on the WASTE network, the user can access all of the services of the WASTE network. All of this happens automatically.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\ul\ulc0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\ul\ulc0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\pagebb{\ul\ulc0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
WASTE network architecture}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s53\ql\widctlpar\li0\ri0\lin0\rin0\fi0\ltrpar\cf0\dbch\af0\dbch\af0\afs24\alang1025\loch\f0\fs24\lang1033{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
WASTE is built upon an underlying distributed network architecture that is similar to that of Gnutella. It consists of a distributed \uc2 \u8220\'81\'67peer to peer\u8221\'81\'68 network that allows communication between hosts based on the model of broadcast request routed reply, where a host sends out a broadcast message to the network, and zero or more hosts send routed replies that follow the path of the broadcast message back to the sender. WASTE uses 128 bit IDs for each new broadcast message, so that each node can track which broadcast messages it has seen, and so that it can route routed messages back to where the original broadcast message came from. Due to the logic of each node on the network, if there are multiple paths to a particular node from another node, the path that took the least time to broadcast is used for the routed reply.\uc1 }
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Nodes on the WASTE network can decide whether or not to rebroadcast or route traffic based on their connection type (modem nodes communicating with nodes on T1s/DSL will generally not want to route).}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Each node organizes a queue of messages for each connection, and prioritizes messages in the queue as appropriate for optimal network performance.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\pagebb\li0\ri0\lin0\rin0\fi360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
WASTE has a basic protocol for sending messages that involves the following information per message:}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
16 byte MD5 of message}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li720\ri0\lin720\rin0\fi0{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
For verifying the integrity of the messages}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
1 byte TTL of message}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li720\ri0\lin720\rin0\fi0{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Used to prevent broadcast messages from saturating the network in the rare instance where multiple hosts have their routing tables overflowed, or a slow node gets very far behind in broadcasting.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
1 byte message priority}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li720\ri0\lin720\rin0\fi0{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Tells how to prioritize the message in sending (0=highest, 255=lowest)}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
4 byte message type}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li720\ri0\lin720\rin0\fi0{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Contains information on what kind of message this is, as well whether or not it is a broadcast message, routed message, or local message.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
2 byte message length (max of 32kb for routed messages, 2kb for broadcast messages)}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
16 byte (128 bit) message ID}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
<message length bytes> message data, dependent on the message type}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\ul\ulc0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\pagebb{\ul\ulc0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
WASTE service implementations}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
WASTE currently provides numerous basic services for users on the network. Here are basic descriptions of how each service is implemented:}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Instant Messaging \u8211\'3f text messages are broadcasted on the WASTE network, with information on the sender and the recipient. Routed replies inform the sender of the instant message when the recipient has received the message, and how long it took to go round trip.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Group chat \u8211\'3f text messages are broadcasted on the WASTE network, with information on the sender and the destination channel name. Automated notification messages, such as when a user joins or parts a channel, are sent via the same means. Routed replies are sent when a user receives a channel message, so that the sender can see who on the channel has gotten the message, and if not, the client can determine that the user has \uc2 \u8220\'81\'67pinged out\u8221\'81\'68.\uc1 }
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Distributed presence \u8211\'3f Two methods are used to let each user have a reliable prediction of who is on the network at any given time. The first method consists of each user periodically broadcasting (especially on each new connection brought up) its existence on the network, so that other users can see when a new user comes on, and detect when the user is no longer broadcasting their existence. The second method is a user can send a broadcast message to request replies with user names. This allows a user to quickly get a full list of who is on the network. Users detect when other users go offline when no activity from that user has been seen in a specified amount of time. }
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
File browsing \u8211\'3f File browsing is accomplished by sending a broadcast message with a browse path to the network, to which each host may send routed replies with any results it may have.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
File searching \u8211\'3f File searching is accomplished by sending a broadcast message with a search specification to the network, to which each host may send routed replies with any results it may have.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
File transfer \u8211\'3f Efficiently implementing file transfer is a bit more complex than the other services, but it also demonstrates the flexibility of the underlying network architecture.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li720\ri0\lin720\rin0\fi0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li720\ri0\lin720\rin0\fi0{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
When a node wishes to download a file (or portion of a file) from another node, the requesting node broadcasts a message with information on which file it is requesting (including host ID, length, file index, filename hash, etc), which portions of the file it wants sent (in 4kb blocks, up to 64 per request (these are run-length encoded for size considerations), and so on. }
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li720\ri0\lin720\rin0\fi0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li720\ri0\lin720\rin0\fi0{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
When a node that has the file receives the broadcast message requesting a file, it routes one or more replies, that include information on the file that it is sending, and up to 64 of the 4k blocks of the file. If the file is larger than 64 blocks, or if any of the blocks are lost during transit (which the receiver can detect by timing out or other means), then the receiver can request more blocks (when it does so, it also includes information on what the last request was, so that the sender can efficiently manage the download). Because each request for more blocks consists of a new broadcast message, the route that blocks get sent back to the receiver can change throughout the transmission of a file.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li720\ri0\lin720\rin0\fi0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li720\ri0\lin720\rin0\fi0{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
The sender and receiver in a file transfer can compute SHA-1 hashes of the file data, to ensure reliable transfer.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li720\ri0\lin720\rin0\fi0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li720\ri0\lin720\rin0\fi0{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Finally, to accomplish an upload, the sender sends a broadcast message to the recipient requesting the upload, which the recipient can optionally accept. Once the recipient accepts the upload, the recipient downloads the file as it would any other.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Key distribution \u8211\'3f WASTE also distributes public keys for connection negotiation by periodically broadcasting them on the network. If a host encounters a new public key on the network, it can optionally accept it (often with user approval), and can optionally send a routed reply to the message with its own public key.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s1\ilvl0\outlinelevel0\ql\widctlpar\keepn\ltrpar\cf0\ul\ulc0\dbch\af0\dbch\af0\afs24\alang1025\loch\f0\fs36\lang1033\widctlpar\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s1\ilvl0\outlinelevel0\ql\widctlpar\keepn\ltrpar\cf0\ul\ulc0\dbch\af0\dbch\af0\afs24\alang1025\loch\f0\fs36\lang1033\pagebb{\listtext\pard\plain \tab}\ls1 \li0\ri0\lin0\rin0\fi0{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
WASTE network design limitations}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
The underlying design of the WASTE network and the basic services that run on it requires that the following conditions be met for the WASTE network to function well:}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
The number of nodes on the network should be small, since the amount of traffic on the network scales more than linearly with the number of users.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033{\listtext\pard\plain \dbch\af0\dbch\af0\loch\f5 \u61623\'3f\tab}\ilvl0\ls3 \li720\ri0\lin720\rin0\fi-360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Each node on the network should trust other users on the network, since messages are inherently broadcasted (often unnecessarily) to many nodes on the network, and data is routinely routed through other nodes on the network.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\ul\ulc0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\pagebb{\ul\ulc0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
WASTE cryptography}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\ul\ulc0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
Since WASTE requires a small trusted network to function efficiently, it benefits greatly from cryptography. Using public-key encryption for session key negotiation and user authentication allows both the prevention of unknown users from joining the network as well link data security to prevent unknown users from \uc2 \u8220\'81\'67sniffing\u8221\'81\'68 network traffic.\uc1 }
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
WASTE also provides for an additional \uc2 \u8220\'81\'67network name or ID\u8221\'81\'68 that can be used to secure a network against people who do not have the name or ID. This can be useful if you wish to easily prevent multiple networks from merging, or change it to easily remove access of user(s) without having to make everybody ban those user(s) public keys.\uc1 }
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
WASTE uses a (hopefully) cryptographically secure random number generator based on the implementation in the RSA reference code. The code uses a 32 byte state, with 16 bytes of counter and 16 bytes of system entropy constantly mixed in, and produces random values by using MD5.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
WASTE connections use RSA (with 1024 bit or greater public key sizes) for exchange of 56 byte Blowfish session keys, and 8 byte PCBC initialization vectors.}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\li0\ri0\lin0\rin0\fi360\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\pagebb\li0\ri0\lin0\rin0\fi360{\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10
The link connection negotiation, where A is connecting to B, goes something like this:}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  1.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
A sends B 16 random bytes (randA), or blowFish(SHA(netname),randA) if a network name is used.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  2.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
A sends B blowFish(randA, 20 byte SHA-1 of public key +  4 pad bytes).}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  3.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
B decrypts to get the SHA-1 of A\uc2 \u8217\'81\'66s public key.\uc1 }
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  4.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
If B does not know the public key hash sent to it, B disconnects.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  5.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
B sends A 16 random bytes (randB), or blowFish(SHA(netname),randB) if a network name is used.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  6.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
B sends A blowFish(randB,20 byte SHA-1 of public key + 4 pad bytes).}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  7.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
A decrypts to get the SHA-1 of B\uc2 \u8217\'81\'66s public key.\uc1 }
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  8.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
If A does not know the public key hash sent to it, A disconnects.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  9.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
A looks up B\uc2 \u8217\'81\'66s public key hash in A\u8217\'81\'66s local database to find B\u8217\'81\'66s public key (pubkey_B).\uc1 }
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  10.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
A generates sKeyA, which is 64 random bytes.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  11.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
If a network name is used, A encrypts the first 56 bytes of sKeyA using the SHA-1 of the network name, to produce EsKeyA. Otherwise, EsKeyA is equal to sKeyA.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  12.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
A sends B: RSA(pubkey_B,EsKeyA + randB)   (+ = concatenated).}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  13.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
B looks up A\uc2 \u8217\'81\'66s public key hash in B\u8217\'81\'66s local database to find A\u8217\'81\'66s public key (pubkey_A).\uc1 }
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  14.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
B generates sKeyB, which is 64 random bytes.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  15.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
If a network name is used, B encrypts the first 56 bytes of sKeyB using the SHA-1 of the network name, to produce EsKeyB. Otherwise, EsKeyB is equal to sKeyB.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  16.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
B sends A: RSA(pubKey_A, EsKeyB + randA), (+ = concatenated).}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  17.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
A decrypts using A\uc2 \u8217\'81\'66s private key, and verifies that the last 16 bytes are equal to randA.\uc1 }
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  18.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
B decrypts using B\uc2 \u8217\'81\'66s private key, and verifies that the last 16 bytes are equal to randB\uc1 }
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  19.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
If a network name is used, A decrypts the first 56 bytes of sKeyB using the SHA-1 of the network name.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  20.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
If a network name is used, B decrypts the first 56 bytes of sKeyA using the SHA-1 of the network name.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  21.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
Both A and B check to make sure that the first 56 bytes of sKeyA does not equal the first 56 bytes of sKeyB. If they do (which is statistically unrealistic and would lead one to believe it is an attack), they disconnect.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  22.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
Both A and B check to make sure the final 8 bytes of sKeyA differs from the final 8 bytes of sKeyB. If they are equal, disconnect.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  23.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
A uses the first 56 bytes of sKeyA XOR sKeyB to initialize Blowfish for send and receive. A uses the final 8 bytes of sKeyA as the PCBC IV for send, and the final 8 bytes of sKeyB as the PCBC IV for receive.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  24.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
B uses the first 56 bytes of sKeyA XOR sKeyB to intialize Blowfish for send and receive. B uses the final 8 bytes of sKeyB as the PCBC IV for send, and the final 8 bytes of sKeyA as the PCBC IV for receive.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  25.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
All further communications in both directions are encrypted using the initialized Blowfish keys and PCBC IVs.}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  26.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
A sends B the constant 16 byte signature (\uc2 \u8220\'81\'67MUGWHUMPJISMSYN2\u8221\'81\'68)\uc1 }
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  27.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
B decrypts verifies the signature}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  28.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
B sends A the constant 16 byte signature (\uc2 \u8220\'81\'67MUGWHUMPJISMSYN2\u8221\'81\'68)\uc1 }
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  29.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
A decrypts and verifies the signature}
\par \pard\plain \s54\ql\widctlpar\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656\noline\ltrpar\cf0\dbch\af6\dbch\af6\afs20\alang1025\loch\f6\fs20\lang1033{\listtext\pard\plain  30.\tab}\ilvl0\ls2 \li1995\ri0\lin1995\rin0\fi-360\tx1440\tx2552\tx3468\tx4384\tx5300\tx6216\tx7132\tx8048\tx8964\tx9880\tx10796\tx11712\tx12628\tx13544\tx14460\tx15376\li720\ri0\lin720\rin0\fi-360{\dbch\af0\afs20\rtlch \ltrch\loch\fs20\loch\f10\hich\af10
Message communication begins (each message uses a MD5 to detect tampering \u8211\'3f if detected, connection is dropped)}
\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\dbch\af0\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par \pard\plain \s0\ql\widctlpar\ltrpar\hyphpar0\cf0\dbch\af0\dbch\af0\afs24\alang1025\langfe2052\loch\f0\fs24\lang1033\afs32\rtlch \ltrch\loch\fs32\loch\f10\hich\af10

\par }